pragma cashscript ^0.5.0;

/*******************************************************************************
 *
 * Copyright (c) 2020 Modenero Corp
 * Released under the MIT License.
 *
 * Nexa Exchange - A 100% non-custodial, cross-chain exchange.
 *
 * Version 20.11.5
 *
 * https://modenero.com
 * support@modenero.com
 *
 * This contract enforces a maker's ability to reclaim their escrow is no
 * sooner than the agreed upon expiration time; while requiring the taker to
 * posses the "secret" of the maker (to be revealed on-chain), in order to
 * claim the escrowed funds.
 *
 * maker      : the initiator of the swap
 * taker      : the counterparty of the swap
 * secretHash : a SHA-256 hash of a 32-byte secret, generated by the maker
 * expiration : block height that will invalidate this contract
 *
 * NOTE: A minimum valid block is required to ensure the oracle's price
 *       signatures will invalidate each day, after the payout is made
 *       and a new UTXO is generated.
 *
 * NOTE: Although the pledged budget is set as a monthly value by the
 *       contract's funder, payouts are made daily to contract's receipient.
 *
 *       eg. February payouts are 1/28 or 1/29 the monthly pledge amount
 *           June payouts are 1/30 the monthly pledge amount
 *           December payouts are 1/31 the monthly pledge amount
 */
contract nexaExchange(
    bytes20 maker,
    bytes20 taker,
    bytes32 secretHash,
    int expiration,
) {
    /**
     * Payout
     *
     * The `taker` of the swap can execute this method as soon as the `secret`,
     * generated by the `maker`, is revealed within the cross-chain transaction.
     */
    function payout(pubkey pk, sig s, bytes32 secret) {
        /* Validate transaction signature. */
        require(checkSig(s, pk));

        /* Validate taker's public key. */
        require(hash160(pk) == taker);

        /* Validate secret (preimage) with hash. */
        // NOTE: This is revealed in the maker's cross-chain transaction.
        require(sha256(secret) == secretHash);
    }

    /**
     * Reclaim
     *
     * The `maker` remains 100% in control over their funds. However, a (CLTV)
     * time lock is enforced throughout the agreed upon escrow period
     * (eg. 2 hours | 12 blocks). Once the escrow period has expired, the
     * swap `maker` may reclaim their assets at any time.
     */
    function reclaim(pubkey pk, sig s) {
        /* Validate transaction signature. */
        require(checkSig(s, pk));

        /* Validate maker's public key. */
        require(hash160(pk) == maker);

        /* Validate swap expiration (block height). */
        require(tx.time >= expiration);
    }

}
